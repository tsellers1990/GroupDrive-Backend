version: "3.9"  # optional since v1.27.0
services:
  web:
    build: .
    ports:
      - "8000:3000"
    environment:
      ENV: "local"
      PGHOST: 'postgres_database'
      PGUSER: 'postgres'
      PGDATABASE: 'group_drive'
      PGPASSWORD: 'example'
      PGPORT: 5432
    volumes:
      - ./app/:/usr/src/app
      - ./log:/var/log
#    depends_on:
#      - postgres_database
#      - mongo_db
  zoo1:
    image: confluentinc/cp-zookeeper:7.1.1
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    platform: "linux/amd64"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.1.1
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "9999:9999"
    platform: "linux/amd64"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  redis:
    image: redis
    container_name: redis_cache
    ports:
      - "6379:6379"
  postgres:
    image: postgres
    container_name: postgres_database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_DB: group_drive

  mongo_db:
    image: mongo
    container_name: mongo_db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example