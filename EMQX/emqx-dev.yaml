apiVersion: v1
kind: PersistentVolume
metadata:
  name: emqx-dev-pv
spec:
  storageClassName: nfs
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - hard
    - nfsvers=4.1
  csi:
    driver: nfs.csi.k8s.io
    readOnly: false
    volumeHandle: emqx-dev-pv-csi  # make sure it's a unique id in the cluster
    volumeAttributes:
      server: 10.6.10.10
      share: /mnt/Application-Flash/k8s/groupdrive-dev/emqx
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: emqx-dev-pvc
  namespace: groupdrive-dev
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  volumeName: emqx-dev-pv
  resources:
    requests:
      storage: 100Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: emqx-dev-deployment
    namespace: groupdrive-dev
    labels:
      app: emqx-dev
spec:
    replicas: 1
    selector:
      matchLabels:
        app: emqx-dev
    template:
      metadata:
        labels:
          app: emqx-dev
      spec:
        containers:
          - name: emqx-dev
            image: emqx/emqx:5.0.8
            imagePullPolicy: Always
            volumeMounts:
              - mountPath: /opt/emqx/data
                name: emqx-dev-data
                subPath: data
              - mountPath: /opt/emqx/etc,
                name: emqx-dev-data
                subPath: config
              - mountPath: /opt/emqx/log
                name: emqx-dev-data
                subPath: logs
        volumes:
          - name: emqx-dev-data
            persistentVolumeClaim:
              claimName: emqx-dev-pvc
---
apiVersion: v1
kind: Service
metadata:
    name: emqx-dev-0-service
    namespace: groupdrive-dev
spec:
    ports:
      - name: mqtt
        port: 1833
        protocol: TCP
      - name: admin-console
        port: 18083
        protocol: TCP
      - name: mqtt-wss
        port: 8083
        protocol: TCP
    selector:
      app: emqx-dev
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: emqx-dev-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  defaultBackend:
    service:
      name: emqx-dev-0-service
      port:
        number: 80
  ingressClassName: nginx
  rules:
    - host: mqtt-admin.dev.groupdrive.app
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: emqx-dev-0-service
                port:
                  number: 18083
  tls:
    - hosts:
        - mqtt-admin.dev.groupdrive.app
      secretName: mqttgroupdrive-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: emqx-ws-socket
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.org/websocket-services: "emqx-dev-0-service"
spec:
  defaultBackend:
    service:
      name: emqx-dev-0-service
      port:
        number: 80
  ingressClassName: nginx
  rules:
    - host: mqtt-ws.dev.groupdrive.app
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: emqx-dev-0-service
                port:
                  number: 8083
  tls:
    - hosts:
        - mqtt-ws.dev.groupdrive.app
      secretName: mqttwsgroupdrive-tls